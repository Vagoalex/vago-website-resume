{"version":3,"file":"static/js/890.cec39c22.chunk.js","mappings":"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","sources":["components/projects/todo/todo-header/TodoHeader.jsx","components/projects/todo/todo-search-panel/TodoSearchPanel.jsx","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","components/projects/todo/todo-list-item/TodoListItem.jsx","components/projects/todo/todo-list/TodoList.jsx","components/projects/todo/todo-add-form/TodoAddForm.jsx","components/projects/todo/todo-app/TodoApp.jsx"],"sourcesContent":["import './TodoHeader.scss';\r\n\r\nconst TodoHeader = ({ todo, done }) => {\r\n  return (\r\n    <div className='TodoHeader'>\r\n      <h2 className='TodoHeader__title'>Todo List</h2>\r\n      <div className='TodoHeader-info'>\r\n        <p className='TodoHeader-info__desk'>\r\n          <span className='TodoHeader-info__desk--active'>{`${todo} `}</span>\r\n          more to do\r\n        </p>\r\n        <p className='TodoHeader-info__desk'>\r\n          <span className='TodoHeader-info__desk--active'>{`${done} `}</span>\r\n          done\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoHeader;\r\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport { changeActiveFilter } from '../../../../store/todoList/filterTodo';\r\nimport './TodoSearchPanel.scss';\r\n\r\nconst filterButtons = [\r\n  { id: 1, label: 'All' },\r\n  { id: 2, label: 'Active' },\r\n  { id: 3, label: 'Done' },\r\n];\r\n\r\nconst TodoSearchPanel = () => {\r\n  const activeFilter = useSelector((state) => state.filterTodo.activeFilter);\r\n  const dispatch = useDispatch();\r\n\r\n  const defaultBtnClasses = 'TodoSearchPanel__btn';\r\n  const activeBtnClasses = 'TodoSearchPanel__btn TodoSearchPanel__btn--active';\r\n\r\n  return (\r\n    <div className='TodoSearchPanel'>\r\n      {filterButtons.map(({ id, label }) => {\r\n        return (\r\n          <button\r\n            key={id}\r\n            className={\r\n              activeFilter === label ? activeBtnClasses : defaultBtnClasses\r\n            }\r\n            data-status={label}\r\n            onClick={(e) =>\r\n              dispatch(changeActiveFilter(e.target.getAttribute('data-status')))\r\n            }\r\n          >\r\n            {label}\r\n          </button>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoSearchPanel;\r\n","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import './TodoListItem.scss';\r\n\r\nconst defaultButtonImportantClasses =\r\n  'TodoListItem-buttons-btn TodoListItem-buttons-btn-important';\r\nconst activeButtonImportantClasses =\r\n  'TodoListItem-buttons-btn TodoListItem-btn--important';\r\n\r\nconst TodoListItem = ({\r\n  id,\r\n  index,\r\n  text,\r\n  important,\r\n  done,\r\n  removeTodoItem,\r\n  onToggleValue,\r\n  onDeleteTodo,\r\n}) => {\r\n  return (\r\n    <li\r\n      className={\r\n        important ? 'TodoListItem TodoListItem--important' : 'TodoListItem'\r\n      }\r\n      style={\r\n        done\r\n          ? { border: '1px solid rgb(9, 255, 0)', color: 'rgb(9, 255, 0)' }\r\n          : null\r\n      }\r\n    >\r\n      <p\r\n        className={\r\n          done\r\n            ? 'TodoListItem__text TodoListItem__text--done'\r\n            : 'TodoListItem__text'\r\n        }\r\n        onClick={() => onToggleValue(id, 'done')}\r\n      >\r\n        {' '}\r\n        <span\r\n          className={\r\n            done\r\n              ? 'TodoListItem__index TodoListItem__index--done'\r\n              : 'TodoListItem__index'\r\n          }\r\n        >{` ${index + 1} `}</span>\r\n        {text}\r\n      </p>\r\n      <div className='TodoListItem-buttons'>\r\n        <button\r\n          className='TodoListItem-buttons-btn TodoListItem-buttons-btn-delete'\r\n          onClick={onDeleteTodo}\r\n          id={id}\r\n        />\r\n        <button\r\n          onClick={() => onToggleValue(id, 'important')}\r\n          className={\r\n            important\r\n              ? activeButtonImportantClasses\r\n              : defaultButtonImportantClasses\r\n          }\r\n        />\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default TodoListItem;\r\n","import { useCallback } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { createSelector } from 'reselect';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\nimport { toggleValue, deleteTodo } from '../../../../store/todoList/todo';\r\nimport TodoListItem from '../todo-list-item/TodoListItem';\r\n\r\nimport './TodoList.scss';\r\n\r\nconst TodoList = () => {\r\n  const filteredTodoListSelector = createSelector(\r\n    (state) => state.filterTodo.activeFilter,\r\n    (state) => state.todoList.todoList,\r\n    (filter, todoList) => {\r\n      if (filter === 'All') {\r\n        return todoList;\r\n      }\r\n      if (filter === 'Active') {\r\n        return todoList.filter((todo) => todo.done === false);\r\n      }\r\n      if (filter === 'Done') {\r\n        return todoList.filter((todo) => todo.done === true);\r\n      } else {\r\n        return todoList.filter((todo) => todo.status === filter);\r\n      }\r\n    }\r\n  );\r\n  const filteredTodoList = useSelector(filteredTodoListSelector);\r\n  const todoList = useSelector((state) => state.todoList.todoList);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onDeleteTodo = useCallback(\r\n    (id) => {\r\n      dispatch(deleteTodo(id));\r\n      console.log(id);\r\n    },\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    []\r\n  );\r\n\r\n  const onToggleValue = (id, propName) => {\r\n    const idx = todoList.findIndex((todo) => todo.id === id);\r\n    const oldItem = todoList[idx];\r\n    const newItem = { ...oldItem, [propName]: !oldItem[propName] };\r\n\r\n    dispatch(\r\n      toggleValue([\r\n        ...todoList.slice(0, idx),\r\n        newItem,\r\n        ...todoList.slice(idx + 1),\r\n      ])\r\n    );\r\n  };\r\n\r\n  const renderElements = (arr) => {\r\n    if (arr.length === 0) {\r\n      return (\r\n        <CSSTransition timeout={1000} classNames='item-transition'>\r\n          <li className='TodoList-item-empty'>\r\n            <p className='TodoList-item-empty__text'>\r\n              Никаких дел нет, Добби свободен!\r\n            </p>\r\n          </li>\r\n        </CSSTransition>\r\n      );\r\n    }\r\n\r\n    return arr.map((listProps, i) => (\r\n      <CSSTransition\r\n        key={listProps.id}\r\n        timeout={1000}\r\n        classNames='item-transition'\r\n      >\r\n        <TodoListItem\r\n          onDeleteTodo={() => onDeleteTodo(listProps.id)}\r\n          onToggleValue={onToggleValue}\r\n          index={i}\r\n          key={listProps.id}\r\n          {...listProps}\r\n        />\r\n      </CSSTransition>\r\n    ));\r\n  };\r\n\r\n  const elements = renderElements(filteredTodoList);\r\n\r\n  return (\r\n    <div className='TodoList'>\r\n      <TransitionGroup component='ul' className='TodoList-list'>\r\n        {elements}\r\n      </TransitionGroup>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport { addTodo, plusCounter } from '../../../../store/todoList/todo';\r\nimport { useFormik } from 'formik';\r\n\r\nimport './TodoAddForm.scss';\r\n\r\nconst validate = (values) => {\r\n  const errors = {};\r\n\r\n  if (!values.todo) {\r\n    errors.todo = 'Укажите дело!';\r\n  } else if (values.todo.length < 4) {\r\n    errors.todo = 'Минимум 4 символа.';\r\n  }\r\n\r\n  return errors;\r\n};\r\n\r\nconst TodoAddForm = () => {\r\n  const counterId = useSelector((state) => state.todoList.counterId);\r\n  const dispatch = useDispatch();\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      todo: '',\r\n    },\r\n\r\n    validate,\r\n    onSubmit: ({ todo }, { resetForm }) => {\r\n      dispatch(\r\n        addTodo({ id: counterId, text: todo, important: false, done: false })\r\n      );\r\n      dispatch(plusCounter());\r\n      resetForm(formik.initialValues);\r\n    },\r\n  });\r\n  return (\r\n    <form className='TodoAddForm' onSubmit={formik.handleSubmit}>\r\n      <input\r\n        id='todo'\r\n        name='todo'\r\n        type='text'\r\n        className='TodoAddForm__input'\r\n        placeholder='What needs to be done?'\r\n        value={formik.values.todo}\r\n        onChange={formik.handleChange}\r\n        onBlur={formik.handleBlur}\r\n      />\r\n      <button type='submit' className='TodoAddForm__btn'>\r\n        Add\r\n      </button>\r\n      {formik.touched.todo && formik.errors.todo ? (\r\n        <div className='TodoAddForm-error'>{formik.errors.todo}</div>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default TodoAddForm;\r\n","import { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { changeActivePage } from '../../../../store/page/pageSlice';\r\n\r\nimport ToDoHeader from '../todo-header/TodoHeader';\r\nimport TodoSearchPanel from '../todo-search-panel/TodoSearchPanel';\r\nimport TodoList from '../todo-list/TodoList';\r\nimport TodoAddForm from '../todo-add-form/TodoAddForm';\r\n\r\nimport './TodoApp.scss';\r\n\r\nconst ToDoApp = () => {\r\n  const todoList = useSelector((state) => state.todoList.todoList);\r\n  const dispatch = useDispatch();\r\n  const [countTodo, setCountTodo] = useState(null);\r\n  const [countDone, setCountDone] = useState(null);\r\n\r\n  // const [todoList, setTodoList] = useState(() => {\r\n  //   const localData = localStorage.getItem('todoList');\r\n  //   return localData ? JSON.parse(localData) : defaultTodos;\r\n  // });\r\n\r\n  // const [counterId, setCounterId] = useState(() => {\r\n  //   const localCounter = localStorage.getItem('counterId');\r\n  //   return localCounter ? JSON.parse(localCounter) : defaultCounter;\r\n  // });\r\n\r\n  useEffect(() => {\r\n    setCountTodo(todoList.length - countDone);\r\n  }, [todoList, countDone]);\r\n\r\n  useEffect(() => {\r\n    setCountDone(todoList.filter((todo) => todo.done).length);\r\n  }, [todoList]);\r\n\r\n  return (\r\n    <div className='Todo'>\r\n      <div className='Todo-wrapper'>\r\n        <div className='Todo-container'>\r\n          <ToDoHeader todo={countTodo} done={countDone} />\r\n          <TodoSearchPanel />\r\n          <TodoList />\r\n          <TodoAddForm />\r\n        </div>\r\n      </div>\r\n      <div className='Todo-home'>\r\n        <button\r\n          onClick={() => dispatch(changeActivePage('default'))}\r\n          className='Todo-home__btn'\r\n        >\r\n          Нажми, чтобы вернуться назад\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ToDoApp;\r\n"],"names":["todo","done","className","filterButtons","id","label","activeFilter","useSelector","state","filterTodo","dispatch","useDispatch","map","onClick","e","changeActiveFilter","target","getAttribute","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","every","dep","dependencyTypes","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","index","text","important","onToggleValue","removeTodoItem","onDeleteTodo","style","border","color","filteredTodoListSelector","todoList","filter","status","filteredTodoList","useCallback","deleteTodo","console","log","propName","idx","oldItem","newItem","toggleValue","slice","elements","CSSTransition","timeout","classNames","listProps","TransitionGroup","component","validate","values","errors","counterId","formik","useFormik","initialValues","onSubmit","resetForm","addTodo","plusCounter","handleSubmit","type","placeholder","onChange","handleChange","onBlur","handleBlur","touched","useState","countTodo","setCountTodo","countDone","setCountDone","useEffect","changeActivePage"],"sourceRoot":""}